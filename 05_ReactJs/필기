4/21

안에 내용을 자바스크립트로 작성해서 완성해야한다.

dom 구조를 먼저 작성하고 진행해야한다.
... virtual DOM


// === 리액트 구동 원리 === //
yarn start -> src안에 있는 내용들을 webpack 안에 babel(코드압축, es6 -> es5{모든 자바스크립트가 해석할수 있게})이 단 하나의 파일로 병합해서 index.html에 계속해서 갱신 (버츄얼 돔)

jsx : 리액트 전용 js 확장 문법. -> 태그 안에서 모든 문법 가능 (배열 탐색 방법이 주로 많이 쓰임)

App() 함수 안에 return에 값을 넣으면 출력

reportWebVitals() 은 성능을 체크하는건데 아직 쓸일이 없다 ......


.render 는 가져온 아이디에 대해 렌더링한다는것
-> 태그 조각을 여러번 재사용할 수 있다.

.react.strictmode
-> 엄걱모드 쓰지 않는 변수들에 대해 경고 메세지가 콘솔에 표시 -> 개발할 떄만 사용하는 것이니 배포할 때는 제거하는게 좋다.


리턴하는 태그가 여러개 일 경우 하나로 묶어야 한다.

닫는태그 .. 원칙적으로 닫는태그 넣는게 맞다 (html은 에러가 안나지만 리액트에서는 난다..)


리액트는
똑같은 구조가 여러번 나타난다면 재사용하는게 핵심

! 다운로드 된 오픈소스를 같이 납품하면 저작권법 위반 .. -> 빼고 줘야한다.


--
npm install --save 파일이름(ex, aos) == yarn add 파일이름  // pakage.json에 저장

--
npm uninstall --save 파일이름(ex, aos) == yarn remove 파일이름  // pakage.json에 삭제

--
npm install == yarn install

npm 과 yarn은 목적이 같음 (같다고 봐도 됨, 패키지 관리자)


라우터 -> 하나의 URL에 실행되어야 하는 JS 파일을 분배하는 기능


a태그 (일반링크) 는 똑같은 파일을 매번 새롭게 다운받는다.

하나의 HTML이 여러개의 페이지를 구성하는 것
싱크페이지어플리케이션 == spa (single page application)

*서브라우팅
하위의 모든값을 허용하겠다 -> ex) /main/*




4/22
변수를 속성에 적용할 때는 따옴표를 사용하지 않는다.


or -> 조건이 거짓일 때 결과를 출력한다.


4/25
메타 -> 프로퍼티 까지는 필수적

임폴트이름은 알아서 정해준다

props는 속성이다. 프로퍼티스 줄여서 씀

데이터 타입 확실히 가려야 한다 문자열은 -> "" / 나머지는 { }

시작 태그와 끝태그 사이 값은 칠드런이라는 고정값으로 들어온다 ?



4/26
jsx의 중괄호는 비구조문법이랑 상관이 없다. -> 변수를 사용하기 위한 것

그냥 링크는 css 적용 빡셈 .. NavLink는 수월함

JSX에서 css는 JSON 형태로 쓰이기 때문에 ; 아니고 , 사용

* !important는 모든 css 구체성 단위를 무시하고 자기가 최우선이 된다.

리액트는 id값 쓰는게 권장사항이 아님 ..

모듈 CSS는 카멜표기법, 아이디값 오류남 ..


4/27
변수이름 = styled.태그 `css`;
-> css 내장한 ul 태그가 된다.


4/28
컴포넌트 쪼개는건 본인 마음 (미리 정하고 시작한다)

스타일드 컴포넌트는 한페이지에 스타일도 같이 작성하자는 의도(따로 만들지않고)
랜덤한 클래스를 적용하는게 스타일드컴포넌트

리액트에서는 클래스만 따로 뽑는 방법은 없다. -> 스타일드컴포넌트로 만들어야함

*리액트.스트릭트모드 ....... 모든 컴포넌트를 두번씩 그린다 ..
개발하는동안은 걸고 배포할때는 빼라.


4/29
주석 달아라 -> 뭔가 기본에 충실해 보임
주석은 좀 과하다 싶을정도로 다는게 좋음


5/2 
헬멧에 스타일 -> 중괄호 백틱 {`...`}

유즈이펙트 -> 두번째 값에 따라 어떻게 변하는지 체크


5/3
유즈스테이트로 rownum 기본값 0
유즈알이에프로 div제어 -> 실시간으로 별찍기 나와야함

배열이나 json은 원소 상태에 상관없이 1개이다.

유즈콜백이 이벤트의 중복 적용을 방지해준다.
-> 한번 적용하고 끝(?)

------
클릭이벤트는 유즈콜백과 연관
버튼이 눌러졌을 때 이벤트 안에서 숫자값을 구하기 위한 리듀서를 호출
리듀스의 액션에 3개 제이슨 묶어서 보낸다

드롭다운 사칙연산 기호에 따라 다르게 수행

결과 출력.
근데 메모를 통해서 출력값을 모니터링하면서 짝수일 때와 홀수일 때 색이 다르게 표현




5/18
- 왜 useState 안쓰고 useRef 쓰나요 ?
유즈스테이트는 상태 값이 바뀌면 화면에 자동으로 갱신,
하지만 ref는 상태 값이 바껴도 화면 갱신을 건드리지 않음. -> 화면에 출력하지 않고 내부 값으로 가지고 있을 때는 ref 사용한다.

- 캐시 -> 이전상태를 기억
웹브라우저에 한번 방문한 사이트의 데이터를 기억하고 있는 것.
재 방문했을 때 데이터를 다시 불러오지 않는다.

입수삭은 try-catch로 받아야 한다.

- navigate
spa 기능은 유지하면서 화면을 갱신

value는 onChange 이벤트 있을 때만 사용가능



리액트로 네이버 가입 클론코딩
member에 ajax 저장된것 까지 제출
